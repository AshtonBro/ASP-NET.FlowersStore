@model FlowersStore.ViewModels.BasketViewModel

@{
    ViewData["Title"] = "BASKET";
}


<div class="container container-basket">
    <section class="basket">
        <h1 class="title">@ViewData["Title"]</h1>
        <span>@Model.UserName</span>
        <form class="basket-form" action="#" method="post">

            <table class="basket-table" cellspacing="0">
                <thead>
                    <tr>
                        <th class="basket-product-remove">&nbsp;</th>
                        <th class="basket-product-thumbnail">&nbsp;</th>
                        <th class="basket-product-name">Product</th>
                        <th class="basket-product-price">Price</th>
                        <th class="basket-product-quantity">Quantity</th>
                        <th class="basket-product-subtotal">SubTotal</th>
                    </tr>
                </thead>
                <tbody>


                    @foreach (var cart in Model.ShopingCarts)
                    {

                        var base64 = Convert.ToBase64String(cart.Product.Image);
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);

                        var price = @cart.Product.Price.ToString();
                        var trimPrice = decimal.Parse(price.Contains(',') ? price.TrimEnd('0') : price);

                        <tr class="basket-cart-item">

                            <td class="basket-product-remove">
                                <a href="#" class="product-remove" aria-label="delete product">×</a>
                            </td>

                            <td class="basket-product-mini-img">
                                <img width="300" height="300" src="@imgSrc" class="basket-mini-img" alt="mini-img" loading="lazy">
                            </td>

                            <td class="basket-product-descr" data-title="Description">
                                <a class="product-name">@cart.Product.Name</a>
                                <a class="product-category">@cart.Product.Category.FlowersType</a>
                            </td>

                            <td class="basket-product-price" data-title="Price">
                                <span class="basket-product-amount amount">@trimPrice <span class="span-style">€</span></span>
                            </td>

                            <td class="basket-product-quantity" data-title="quantity">
                                <div class="basket-product-container">
                                    <button type="button" class="basket-product-counter counter-minus basket-minus">-</button>
                                    <span class="span-product-quantity">@cart.Quantity</span>
                                    <button type="button" class="basket-product-counter counter-plus basket-plus">+</button>
                                </div>
                            </td>

                            <td class="basket-product-subtotal" data-title="subtotal">
                                <span class="basket-price-amount"><bdi class="amount">@(cart.Quantity * trimPrice)</bdi></span>
                                <span class="span-style">€</span>
                            </td>
                        </tr>
                    }

                    <tr class="basket-cart-footer">
                        <td colspan="6" class="basket-actions">
                            <span class="basket-price-amount "><bdi class="basket-product-amount">Total: <span class="amount-total">3120</span> <span class="span-style">€</span></bdi></span>
                        </td>
                    </tr>
                    <tr class="basket-cart-footer">
                        <td colspan="6" class="basket-actions">
                            <button type="submit" class="basket-submit-btn btnClick btn loginBtn btnBorder" name="Checkout" value="Checkout" aria-disabled="false">Checkout</button>
                        </td>
                    </tr>

                </tbody>
            </table>
        </form>

        <script>
            let priceAmount = document.querySelectorAll('.basket-price-amount');
            let amountTotal = document.querySelector('.amount-total');

            let total = 0;

            for (var i = 0; i < priceAmount.length - 1; i++) {
                total += parseInt(priceAmount[i].innerText);
            }

            amountTotal.innerText = total;
        </script>

    </section>
</div>
